dist_jaccard[lower.tri(dist_jaccard)] <- NA
diag(dist_jaccard) <- NA
dist_jaccard_m <- melt(dist_jaccard) %>%
rename(jaccard = value) %>%
filter(!(is.na(jaccard))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# Bray-Curtis
dist_bray <- as.matrix(1-vegdist(dat_asv_beta, "bray"))
dist_bray[lower.tri(dist_bray)] <- NA
diag(dist_bray) <- NA
dist_bray_m <- melt(dist_bray) %>%
rename(bray = value) %>%
filter(!(is.na(bray))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
#  UniFrac
# pruning the tree
included_asvs <- colnames(dat_asv_beta)
unincluded <- rooted_tree$tip.label[!rooted_tree$tip.label %in% included_asvs]
pruned <- dendextend::prune(rooted_tree, unincluded)
unifracs <- GUniFrac(as.matrix(dat_asv_beta), pruned, alpha=c(0, 0.5, 1))$unifracs
# Weighted UniFrac
dist_wunif <- 1-unifracs[, , "d_1"]
dist_wunif[lower.tri(dist_wunif)] <- NA
diag(dist_wunif) <- NA
dist_wunif_m <- melt(dist_wunif) %>%
rename(wunifrac = value) %>%
filter(!(is.na(wunifrac))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# Weighted UniFrac
dist_uwunif <- 1-unifracs[, , "d_UW"]
dist_uwunif[lower.tri(dist_uwunif)] <- NA
diag(dist_uwunif) <- NA
dist_uwunif_m <- melt(dist_uwunif) %>%
rename(uwunifrac = value) %>%
filter(!(is.na(uwunifrac))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# combining indeces
dists <- bind_cols(dist_jaccard_m, bray=dist_bray_m$bray) %>%
bind_cols(w_unifrac=dist_wunif_m$wunifrac) %>%
bind_cols(uw_unifrac=dist_uwunif_m$uwunifrac) %>%
gather("index","value",jaccard, bray, w_unifrac, un_unifrac)
# calculating the mean
dist_mean <- dists %>%
group_by(grid.x, index) %>%
summarise(mean = mean(value))
# Plotting
g <- dists %>%
ggplot(aes(value, fill=index, cut=index)) +
geom_density(alpha=.4) +
facet_wrap(~grid.x) +
theme_bw() +
theme(axis.text = element_text(size = 10, color = 'black'), title = element_text(size = 14), strip.text.x = element_text(size = 12)) +
xlim(0, 1) +
geom_vline(data=dist_mean, aes(xintercept=mean, color=index), linetype="dashed")+
guides(fill=guide_legend(title="Similarity Index")) +
labs(x="Community similarity",y="Density")
print(g)
cat('\n','\n')
}
for(s in common_sp) {
cat('###',s,'\n','\n')
# preparing the data
dat_beta <- dat %>% filter(host_species == s)
dat_asv_beta <- dat_beta %>%
column_to_rownames("host_ID") %>%
dplyr::select(starts_with("ASV")) %>%
dplyr::select(where(~ any(. > 0, na.rm = TRUE)))
# Jaccard
dat_asv_j <- dat_asv_beta %>% mutate_all(funs(ifelse(.>0,1,0)))
dist_jaccard <- as.matrix(1-vegdist(dat_asv_j, "jaccard"))
dist_jaccard[lower.tri(dist_jaccard)] <- NA
diag(dist_jaccard) <- NA
dist_jaccard_m <- melt(dist_jaccard) %>%
rename(jaccard = value) %>%
filter(!(is.na(jaccard))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# Bray-Curtis
dist_bray <- as.matrix(1-vegdist(dat_asv_beta, "bray"))
dist_bray[lower.tri(dist_bray)] <- NA
diag(dist_bray) <- NA
dist_bray_m <- melt(dist_bray) %>%
rename(bray = value) %>%
filter(!(is.na(bray))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
#  UniFrac
# pruning the tree
included_asvs <- colnames(dat_asv_beta)
unincluded <- rooted_tree$tip.label[!rooted_tree$tip.label %in% included_asvs]
pruned <- dendextend::prune(rooted_tree, unincluded)
unifracs <- GUniFrac(as.matrix(dat_asv_beta), pruned, alpha=c(0, 0.5, 1))$unifracs
# Weighted UniFrac
dist_wunif <- 1-unifracs[, , "d_1"]
dist_wunif[lower.tri(dist_wunif)] <- NA
diag(dist_wunif) <- NA
dist_wunif_m <- melt(dist_wunif) %>%
rename(wunifrac = value) %>%
filter(!(is.na(wunifrac))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# UnWeighted UniFrac
dist_uwunif <- 1-unifracs[, , "d_UW"]
dist_uwunif[lower.tri(dist_uwunif)] <- NA
diag(dist_uwunif) <- NA
dist_uwunif_m <- melt(dist_uwunif) %>%
rename(uwunifrac = value) %>%
filter(!(is.na(uwunifrac))) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var1"="host_ID")) %>%
left_join(dat_beta %>% dplyr::select(host_ID,grid),by=c("Var2"="host_ID")) %>%
filter(grid.x==grid.y)
# combining indeces
dists <- bind_cols(dist_jaccard_m, bray=dist_bray_m$bray) %>%
bind_cols(w_unifrac=dist_wunif_m$wunifrac) %>%
bind_cols(uw_unifrac=dist_uwunif_m$uwunifrac) %>%
gather("index","value",jaccard, bray, w_unifrac, uw_unifrac)
# calculating the mean
dist_mean <- dists %>%
group_by(grid.x, index) %>%
summarise(mean = mean(value))
# Plotting
g <- dists %>%
ggplot(aes(value, fill=index, cut=index)) +
geom_density(alpha=.4) +
facet_wrap(~grid.x) +
theme_bw() +
theme(axis.text = element_text(size = 10, color = 'black'), title = element_text(size = 14), strip.text.x = element_text(size = 12)) +
xlim(0, 1) +
geom_vline(data=dist_mean, aes(xintercept=mean, color=index), linetype="dashed")+
guides(fill=guide_legend(title="Similarity Index")) +
labs(x="Community similarity",y="Density")
print(g)
cat('\n','\n')
}
?metaMDS
# pruning the tree
included_asvs <- colnames(dat_asv_beta)
unincluded <- rooted_tree$tip.label[!rooted_tree$tip.label %in% included_asvs]
pruned <- dendextend::prune(rooted_tree, unincluded)
unifracs <- GUniFrac(as.matrix(dat_asv_beta), pruned, alpha=c(0, 0.5, 1))$unifracs
dist_wunif <- 1-unifracs[, , "d_1"]
nmds_wunif <- metaMDS(dist_wunif, k=2, trace = FALSE) #NMDS
# stressplot(nmds_bray)
NMDS1<-nmds_bray$points[,1]
NMDS2<-nmds_bray$points[,2]
# stressplot(nmds_bray)
NMDS1<-nmds_wunif$points[,1]
NMDS2<-nmds_wunif$points[,2]
bray_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_bray$stress,3))) # adding stress
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_wunif$stress,3))) # adding stress
print(g)
stressplot(nmds_wunif)
set.seed(199)
for(s in common_sp) {
cat('###',s,'\n','\n')
# preparing the data
dat_beta <- dat %>% filter(host_species == s)
dat_asv_beta <- dat_beta %>%
column_to_rownames("host_ID") %>%
dplyr::select(starts_with("ASV")) %>%
dplyr::select(where(~ any(. > 0, na.rm = TRUE)))
# Jaccard
cat("Jaccard \n")
dat_asv_beta_j <- dat_asv_beta %>%  mutate_all(funs(ifelse(.>0,1,0)))
dist_jaccard <- vegdist(dat_asv_beta_j, method = "jaccard") # distance matrix
beta_jaccard <- adonis2(formula = dist_jaccard ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_jaccard[1,5]
disp_jaccard <- betadisper(dist_jaccard, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_jaccard)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_jaccard <- RVAideMemoire::pairwise.perm.manova(dist_jaccard, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_jaccard))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_jaccard <- TukeyHSD(disp_jaccard)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_jaccard))
cat('\n')
# checking for outliers (disconnected samples)
dis <- distconnected(dist_jaccard)
if(length(unique(dis)) > 1){
dat_asv_beta <- dat_asv_beta[dis==1,]  # removing them
dat_asv_beta_j <- dat_asv_beta_j[dis==1,]
dat_beta <- dat_beta[dis==1,]
}
nmds_jaccard <- metaMDS(dat_asv_beta_j, distance = "jaccard", noshare = TRUE, k=2, trace = FALSE) #NMDS
# stressplot(nmds_jaccard)
NMDS1<-nmds_jaccard$points[,1]
NMDS2<-nmds_jaccard$points[,2]
jaccard_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- jaccard_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_jaccard$stress,3))) # adding stress
print(g)
cat('\n')
# Bray-curtis
cat("Bray-Curtis \n")
dist_bray <- vegdist(dat_asv_beta, method = "bray") # distance matrix
beta_bray <- adonis2(formula = dist_bray ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_bray[1,5]
disp_bray <- betadisper(dist_bray, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_bray)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_bray <- RVAideMemoire::pairwise.perm.manova(dist_bray, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_bray))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_bray <- TukeyHSD(disp_bray)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_bray))
cat('\n')
nmds_bray <- metaMDS(dat_asv_beta, distance = "bray", k=2, noshare = TRUE, trace = FALSE) #NMDS
# stressplot(nmds_bray)
NMDS1<-nmds_bray$points[,1]
NMDS2<-nmds_bray$points[,2]
bray_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_bray$stress,3))) # adding stress
print(g)
cat('\n')
# Weighted UniFrac
cat("Weighted UniFrac \n")
# pruning the tree
included_asvs <- colnames(dat_asv_beta)
unincluded <- rooted_tree$tip.label[!rooted_tree$tip.label %in% included_asvs]
pruned <- dendextend::prune(rooted_tree, unincluded)
unifracs <- GUniFrac(as.matrix(dat_asv_beta), pruned, alpha=c(0, 0.5, 1))$unifracs
dist_wunif <- 1-unifracs[, , "d_1"]
beta_wunif <- adonis2(formula = dist_wunif ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_wunif[1,5]
disp_wunif <- betadisper(dist_wunif, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_wunif)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_wunif <- RVAideMemoire::pairwise.perm.manova(dist_wunif, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_bray))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_wunif <- TukeyHSD(disp_wunif)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_bray))
cat('\n')
nmds_wunif <- metaMDS(dist_wunif, k=2, trace = FALSE) #NMDS
# stressplot(nmds_wunif)
NMDS1<-nmds_wunif$points[,1]
NMDS2<-nmds_wunif$points[,2]
bray_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_wunif$stress,3))) # adding stress
print(g)
cat('\n','\n')
}
?as.dist
dist_wunif <- as.dist(1-unifracs[, , "d_1"])
dist_wunif <- 1-unifracs[, , "d_1"]
dist_wunif <- as.dist(1-unifracs[, , "d_1"])
set.seed(199)
for(s in common_sp) {
cat('###',s,'\n','\n')
# preparing the data
dat_beta <- dat %>% filter(host_species == s)
dat_asv_beta <- dat_beta %>%
column_to_rownames("host_ID") %>%
dplyr::select(starts_with("ASV")) %>%
dplyr::select(where(~ any(. > 0, na.rm = TRUE)))
# Jaccard
cat("Jaccard \n")
dat_asv_beta_j <- dat_asv_beta %>%  mutate_all(funs(ifelse(.>0,1,0)))
dist_jaccard <- vegdist(dat_asv_beta_j, method = "jaccard") # distance matrix
beta_jaccard <- adonis2(formula = dist_jaccard ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_jaccard[1,5]
disp_jaccard <- betadisper(dist_jaccard, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_jaccard)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_jaccard <- RVAideMemoire::pairwise.perm.manova(dist_jaccard, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_jaccard))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_jaccard <- TukeyHSD(disp_jaccard)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_jaccard))
cat('\n')
# checking for outliers (disconnected samples)
dis <- distconnected(dist_jaccard)
if(length(unique(dis)) > 1){
dat_asv_beta <- dat_asv_beta[dis==1,]  # removing them
dat_asv_beta_j <- dat_asv_beta_j[dis==1,]
dat_beta <- dat_beta[dis==1,]
}
nmds_jaccard <- metaMDS(dat_asv_beta_j, distance = "jaccard", noshare = TRUE, k=2, trace = FALSE) #NMDS
# stressplot(nmds_jaccard)
NMDS1<-nmds_jaccard$points[,1]
NMDS2<-nmds_jaccard$points[,2]
jaccard_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- jaccard_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_jaccard$stress,3))) # adding stress
print(g)
cat('\n')
# Bray-curtis
cat("Bray-Curtis \n")
dist_bray <- vegdist(dat_asv_beta, method = "bray") # distance matrix
beta_bray <- adonis2(formula = dist_bray ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_bray[1,5]
disp_bray <- betadisper(dist_bray, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_bray)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_bray <- RVAideMemoire::pairwise.perm.manova(dist_bray, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_bray))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_bray <- TukeyHSD(disp_bray)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_bray))
cat('\n')
nmds_bray <- metaMDS(dat_asv_beta, distance = "bray", k=2, noshare = TRUE, trace = FALSE) #NMDS
# stressplot(nmds_bray)
NMDS1<-nmds_bray$points[,1]
NMDS2<-nmds_bray$points[,2]
bray_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_bray$stress,3))) # adding stress
print(g)
cat('\n')
# Weighted UniFrac
cat("Weighted UniFrac \n")
# pruning the tree
included_asvs <- colnames(dat_asv_beta)
unincluded <- rooted_tree$tip.label[!rooted_tree$tip.label %in% included_asvs]
pruned <- dendextend::prune(rooted_tree, unincluded)
unifracs <- GUniFrac(as.matrix(dat_asv_beta), pruned, alpha=c(0, 0.5, 1))$unifracs
dist_wunif <- as.dist(1-unifracs[, , "d_1"])
beta_wunif <- adonis2(formula = dist_wunif ~ grid, data = dat_beta) # PERMANOVA
results_a <- beta_wunif[1,5]
disp_wunif <- betadisper(dist_wunif, group=dat_beta$grid) # PERMDISP - dispersion
results_b <- anova(disp_wunif)[1,5]
results_sum <- tibble(PERMANOVA = results_a, PERMDIST = results_b)
print(knitr::kable(results_sum))
cat('\n')
# PERMANOVA post-hoc
beta_post_wunif <- RVAideMemoire::pairwise.perm.manova(dist_wunif, fact = dat_beta$grid,
test = "bonferroni", nperm = 999, progress = FALSE)$p.value %>% as.data.frame()
print(knitr::kable(beta_post_bray))
cat('\n')
# Tukey test to check pairwise dispersion comparisons
disp_tuk_wunif <- TukeyHSD(disp_wunif)$group %>% as.data.frame() %>% dplyr::select("p adj")
print(knitr::kable(disp_tuk_bray))
cat('\n')
nmds_wunif <- metaMDS(dist_wunif, k=2, trace = FALSE) #NMDS
# stressplot(nmds_wunif)
NMDS1<-nmds_wunif$points[,1]
NMDS2<-nmds_wunif$points[,2]
bray_plot <- cbind(dat_beta, NMDS1, NMDS2)
# plotting
g <- bray_plot %>%
ggplot( aes(NMDS1, NMDS2, color=grid)) +
geom_point(position=position_jitter(.1)) +
stat_ellipse(aes(fill=grid), alpha=.1, type='norm',linetype =2, geom="polygon") + ##draws 95% confidence interval ellipses
theme_minimal() +
annotate("text", x=0, y=max(abs(NMDS2)), label=paste('Stress =',round(nmds_wunif$stress,3))) # adding stress
print(g)
cat('\n','\n')
}
install.packages("picante")
library(picante) # phylogentic diversity
dat_phylo_matrix <- dat %>%
column_to_rownames("host_ID") %>%
dplyr::select(starts_with("ASV")) %>%
dplyr::select(where(~ any(. > 0, na.rm = TRUE)))
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree)
View(dat_phylo)
View(dat)
dat_phylo %<>% rownames_to_column() %>%
left_join(dat %>% dplyr::select(host_ID,host_species,village,grid), by="host_species")
dat_phylo %<>% rownames_to_column()
dat_phylo %<>% rownames_to_column("host_ID")
# PSE - take into account phylogenetic distance and species abundance
# min value: 0; max value: 1
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree)
dat_phylo %<>% rownames_to_column("host_ID") %>%
left_join(dat %>% dplyr::select(host_ID,host_species,village,grid), by="host_ID")
dat_phylo %<>% rownames_to_column("host_ID")
class(dat_phylo$host_ID)
# PSE - take into account phylogenetic distance and species abundance
# min value: 0; max value: 1
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree)
dat_phylo %<>% rownames_to_column("host_ID") %>%
as.numeric(host_ID) %>%
left_join(dat %>% dplyr::select(host_ID,host_species,village,grid), by="host_ID")
dat_phylo %<>% rownames_to_column("host_ID") %>%
as.numeric(host_ID)
class(dat$host_ID)
dat_phylo %<>% rownames_to_column("host_ID") %>%
as.numeric(host_ID)
dat_phylo %<>% rownames_to_column("host_ID")
# PSE - take into account phylogenetic distance and species abundance
# min value: 0; max value: 1
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree)
dat_phylo %<>% rownames_to_column("host_ID") %>%
as.numeric(host_ID)
# PSE - take into account phylogenetic distance and species abundance
# min value: 0; max value: 1
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree) %>% rownames_to_column("host_ID")
dat_phylo %<>% as.numeric(host_ID) %>%
left_join(dat %>% dplyr::select(host_ID,host_species,village,grid), by="host_ID")
# PSE - take into account phylogenetic distance and species abundance
# min value: 0; max value: 1
dat_phylo <- picante::pse(dat_phylo_matrix, rooted_tree)
dat_phylo %<>% rownames_to_column("host_ID") %>%
mutate(host_ID = as.numeric(host_ID)) %>%
left_join(dat %>% dplyr::select(host_ID,host_species,village,grid), by="host_ID")
richness <- dat_long %>% group_by( host_ID) %>%
summarise(richness = n_distinct(asv_ID))
dat_shannon <- dat %>%
dplyr::select(starts_with("ASV")) %>%
mutate(across(starts_with("ASV"),~ .*log(.)))
shannon <- -rowSums(dat_shannon, na.rm = TRUE)
# plotting
dat_phylo %>%
ggplot(aes(x=grid, y=shannon, fill=village)) +
facet_wrap(~host_species) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 10, color = 'black', angle = 90, vjust = 0.5, hjust=1), title = element_text(size = 16), strip.text.x = element_text(size = 12)) +
labs(x="Land-use", y="Average phylogenetic Diversity")
# plotting
dat_phylo %>%
ggplot(aes(x=grid, y=PSEs, fill=village)) +
facet_wrap(~host_species) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 10, color = 'black', angle = 90, vjust = 0.5, hjust=1), title = element_text(size = 16), strip.text.x = element_text(size = 12)) +
labs(x="Land-use", y="Average phylogenetic Diversity")
# combining all diversity measures into one data frame + hosts metadata
asv_diversity <- tibble(host_ID = richness$host_ID,
richness = richness$richness,
shannon = shannon,
phylo = dat_phylo$PSEs) %>%
left_join(data_sm, by="host_ID")
# transforming to long format
dat_long <- dat %>% gather("asv_ID","reads",starts_with("ASV")) %>%
filter(reads > 0)
richness <- dat_long %>% group_by( host_ID) %>%
summarise(richness = n_distinct(asv_ID))
# combining all diversity measures into one data frame + hosts metadata
asv_diversity <- tibble(host_ID = richness$host_ID,
richness = richness$richness,
shannon = shannon,
phylo = dat_phylo$PSEs) %>%
left_join(data_sm, by="host_ID")
setwd("~/Documents/GitHub/Microbiome_Structure_Madagascar")
