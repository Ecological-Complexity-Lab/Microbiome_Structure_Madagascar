habitat <- habitat %>%
mutate(herbaceous_height = case_when(herbaceous_height == "0.4 to 1.5" ~ mean(c(0.4, 1.5)),
herbaceous_height == "1.5 to 2" ~ mean(c(1.5, 2)),
herbaceous_height == "0.3 to 1" ~ mean(c(0.3, 1)),
herbaceous_height == "0,3 to 1" ~ mean(c(0.3, 1)),
herbaceous_height == "0 to 1" ~ mean(c(0, 1)),
herbaceous_height == "0 to 2" ~ mean(c(0, 2)),
TRUE ~ as.numeric(herbaceous_height)))
# add pitfall column
habitat <- habitat %>%
mutate(pitfall = ifelse(str_detect(plot, "Pitfall"), "Pitfall", "Grid"),
pitfall_line = case_when(str_detect(plot, "Pitfall 1") ~ 1,
str_detect(plot, "Pitfall 2") ~ 2,
str_detect(plot, "Pitfall 3") ~ 3,
str_detect(plot, "Pitfall 4") ~ 4,
str_detect(plot, "Pitfall 5") ~ 5,
str_detect(plot, "Pitfall 6") ~ 6,
str_detect(plot, "Pitfall 7") ~ 7,
str_detect(plot, "Pitfall 8") ~ 8,
str_detect(plot, "Pitfall 9") ~ 9,
str_detect(plot, "Pitfall 10") ~ 10,
str_detect(plot, "Pitfall 11") ~ 11,
str_detect(plot, "Pitfall 12") ~ 12,
TRUE ~ 0))
## make a trees df
trees <- habitat %>%
select(village, grid_name, season, pitfall, plot, square, tree_height, tree_dbh) %>%
group_by(village, grid_name, plot, square) %>%
summarise(tree_height = mean(tree_height, na.rm=T),
tree_dbh = mean(tree_dbh, na.rm=T))
## create a new df individual tree measurements
squares <- habitat %>%
mutate(tree = ifelse(is.na(tree_dbh), 0, 1)) %>% ## count the number of trees in each square
group_by(village, grid_name, plot, square) %>%
mutate(n_trees = sum(tree)) %>%
ungroup() %>%
select(-tree_height, -tree_dbh, -tree) %>% # remove tree info from habitat
distinct() %>%
left_join(trees, by=c("village","grid_name","plot","square"))
# summarizing for plots
plot_sum <- squares %>%
mutate(across(c(n_trees, tree_height, tree_dbh, dead_logs,
liana_number, herbaceous_height,
herbaceous_cover, canopy_cover))) %>%
group_by(pitfall, pitfall_line, village, grid_name, plot) %>%
summarise(n_trees = sum(n_trees, na.rm=T),
tree_height = mean(tree_height, na.rm=T),
tree_dbh = mean(tree_dbh, na.rm=T),
n_logs = sum(dead_logs, na.rm=T),
n_liana = sum(liana_number, na.rm=T),
m_herb_ht = mean(herbaceous_height, na.rm=T),
m_herb_cv = mean(herbaceous_cover, na.rm = T),
m_canopy_cv = mean(canopy_cover, na.rm = T)) %>%
ungroup() %>%
mutate(across(everything(), ~replace(. , is.nan(.), 0)))
# summarizing for grids
grid_sum <- plot_sum %>%
filter(pitfall == "Grid") %>%
group_by(grid_name, village) %>%
summarise_at(vars(4:11), ~mean(., na.rm=TRUE)) %>%
ungroup() %>%
arrange(grid_name) %>%
mutate(grid_name = factor(grid_name))
# name index
grid_village_name <- grid_sum %>%
select(village, grid_name) %>%
unite(col="grid_village", village:grid_name, remove = FALSE)
# transforming to matrix
grid_sum_mat <- grid_sum %>%
unite(col="grid_village", c("village","grid_name"), remove = TRUE) %>%
column_to_rownames("grid_village") %>%
ungroup() %>%
as.matrix()
# PCA
# variables transformed to centered 0 and rescale to have unit variance before the analysis
pca_veg <- prcomp(grid_sum_mat, center = TRUE, scale. = TRUE)
vegetation_pca <- as.data.frame(pca_veg$x) %>%
rownames_to_column("grid_village") %>%
left_join(grid_village_name, by="grid_village") %>%
select(grid_village,village,grid_name,PC1,PC2) %>%
dplyr::rename(grid=grid_name) %>%
rename_with(~paste("veg",.,sep="_"), .cols=starts_with("PC"))
# explained variance
ex_var <- pca_veg$sdev ^2
prop_ex_var <- ex_var/sum(ex_var)*100
prop_ex_var
pca_data <- data.frame(pca_veg$x[, 1:2],  # Select the first two principal components
village = as.factor(grid_sum$village),
land_use = as.factor(grid_sum$grid_name))
View(pca_data)
loadings <- data.frame(pca_veg$rotation[, 1:2], variable = rownames(pca_veg$rotation))
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 3, alpha = 0.7, aes(color = land_use, shape = village, fill = season)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7* 1.2, y = PC2 * 7 * 1.2, label = variable),
color = "black", size = 4) +  # Variable names near the arrows
labs(title = "PCA vegetation (per land use, village and season)",
x = paste("PC1 (",round(prop_ex_var[1],2),"% variance explained)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"% variance explained)", sep = "")) +
scale_color_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("white", "black", "grey"))  +
guides(fill = guide_legend(override.aes = list(shape=21))) +
stat_ellipse(geom = "polygon",
aes(color = land_use), # use inherit.aes=F if needed
alpha=0.1) + # Add ellipses by land_use
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 3, alpha = 0.7, aes(color = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7* 1.2, y = PC2 * 7 * 1.2, label = variable),
color = "black", size = 4) +  # Variable names near the arrows
labs(title = "PCA vegetation (per land use, village and season)",
x = paste("PC1 (",round(prop_ex_var[1],2),"% variance explained)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"% variance explained)", sep = "")) +
scale_color_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("white", "black", "grey"))  +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 3, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7* 1.2, y = PC2 * 7 * 1.2, label = variable),
color = "black", size = 4) +  # Variable names near the arrows
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_color_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("white", "black", "grey"))  +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 3, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7* 1.2, y = PC2 * 7 * 1.2, label = variable),
color = "black", size = 4) +  # Variable names near the arrows
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +  # Variable names near the arrows
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
View(loadings)
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = RDA1, y = RDA2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0.5,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(ggrepel)
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = RDA1, y = RDA2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0.5,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
View(loadings)
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = PC2, y = PC2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0.5,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*7, yend = PC2*7),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = PC2, y = PC2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = PC2, y = PC2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0.5,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = PC2, y = PC2, label = variable),
size = 4,
box.padding = 0.5,
point.padding = 0,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1, yend = PC2),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text_repel(
data = loadings,
inherit.aes = FALSE,
aes(x = PC2, y = PC2, label = variable),
size = 4,
box.padding = 0.2,
point.padding = 0,
segment.colour = NA
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
coord_cartesian(
xlim = range(pca_data$PC1) * c(1.3, 1.2),
ylim = range(pca_data$PC2) * c(1.3, 1.2),
clip = 'off'
) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
veg_plot
pdf(file = 'results/figure_S3.pdf')
#pdf(file = 'results/figure_S3.pdf')
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dev.off()
#dev.off()
veg_plot
pdf(file = 'results/figure_S3.pdf')
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dev.off()
#pdf(file = 'results/figure_S3.pdf')
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = "")) +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.border = element_rect(colour = "black", size = 1),
panel.grid = element_blank(), aspect.ratio = 1)
#dev.off()
veg_plot
#pdf(file = 'results/figure_S3.pdf')
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = ""),
fill = "Land-use", shape="Village") +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.border = element_rect(colour = "black"),
panel.grid = element_blank(), aspect.ratio = 1, title = element_text(size = 14))
#dev.off()
veg_plot
#pdf(file = 'results/figure_S3.pdf')
veg_plot <- ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_point(size = 5, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = ""),
fill = "Land-use", shape="Village") +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.border = element_rect(colour = "black"),
panel.grid = element_blank(), aspect.ratio = 1, title = element_text(size = 14))
#dev.off()
veg_plot
pdf(file = 'results/figure_S3.pdf')
ggplot(pca_data, aes(x = PC1, y = PC2)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
geom_point(size = 5, alpha = 0.7, aes(fill = land_use, shape = village)) +
geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*6, yend = PC2*6),
arrow = arrow(length = unit(0.2, "cm")), color = "black") +  # Vectors as arrows
geom_text(data = loadings, aes(x = PC1 * 7, y = PC2 * 7, label = variable),
color = "black", size = 4) +
labs(x = paste("PC1 (",round(prop_ex_var[1],2),"%)", sep = ""),
y = paste("PC2 (",round(prop_ex_var[2],2),"%)", sep = ""),
fill = "Land-use", shape="Village") +
scale_fill_manual(values = c("red", "blue", "green", "orange", "purple","yellow", "black", "grey")) +
scale_shape_manual(values = c(21, 22, 23)) +
guides(fill = guide_legend(override.aes = list(shape=21))) +
theme_bw() +
theme(panel.border = element_rect(colour = "black"),
panel.grid = element_blank(), aspect.ratio = 1, title = element_text(size = 14))
dev.off()
?distm
View(habitat.raw)
