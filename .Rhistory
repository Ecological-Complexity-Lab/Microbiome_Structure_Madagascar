left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
t.test(same_module$mean, mu=0)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) & grid1==grid2 %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 & grid1==grid2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
t.test(same_module$mean, mu=0)
?ape::dist.dna
seq_aligned <- readDNAStringSet("data/data_raw/data_microbiome/ASV_merged_full_0.01.fa")
seq_aligned <- msa::msaClustalOmega("data/data_raw/data_microbiome/ASV_merged_full_0.01.fa", type="dna",
auto=F,
cluster=100,
dealign=F,
order="input",
useKimura=T)
seq_aligned2 <- as.DNAbin(seq_aligned)
a=same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 )
View(a)
?sample
# filter villages
data_asv_village <- data_asv %>%
filter(village == "Mandena")
# ASVs pool
n_asv <- data_asv_village %>% count(asv_ID)
View(n_asv)
View(data_asv_village)
# ASVs pool
asv_pool <- data_asv_village %>%
distinct(asv_ID, asv_degree) %>%
mutate(p = asv_degree/length(unique(data_asv_village$asv_ID)))
View(asv_pool)
fun_calc_betaNTI <- function(dat_mat, phylo_dist, asv_pool, abu) {
n_modules <- nrow(dat_mat)
n_asv <- ncol(dat_mat)
#asv_pool2 <- colnames(dat_mat)
# calculating observed MNTD
mntd_obs <- as.matrix(picante::comdistnt(dat_mat, phylo_dist))
mntd_shuff <- array(NA,dim = c(n_modules,n_modules,10))
# loop for shuffling
for (i in 1:10) {
# randomly sampling ASVs from the ASV pool
shuff_asv_names <- sample(asv_pool$asv_ID, n_asv, prob = asv_pool$p, replace = FALSE)
# changing the cols names
dat_mat_shuff <- dat_mat
colnames(dat_mat_shuff) <- shuff_asv_names
# calculating MNTD
mntd_shuff[,,i] <- as.matrix(picante::comdistnt(dat_mat_shuff, phylo_dist, abundance.weighted = abu))
}
# taking the mean and sd of the shuffled matrices
mntd_shuff_mean <- apply(mntd_shuff,c(1,2),mean)
mntd_shuff_sd <- apply(mntd_shuff,c(1,2),sd)
# calculating betaNTI
betaNTI_mat <- (mntd_obs - mntd_shuff_mean) / mntd_shuff_sd
betaNTI_mat2 <- betaNTI_mat
betaNTI_mat2[upper.tri(betaNTI_mat2)] <- NA
diag(betaNTI_mat2) <- NA
betaNTI <- melt(betaNTI_mat2) %>%
filter(!(is.na(value))) %>%
rename(module1 = Var1, module2 = Var2, betaNTI = value)
return(betaNTI)
}
grids_names <- unique(data_asv_village$grid)
# loop of grids
for (g in grids_names) {
data_asv_grid <- data_asv_village %>% filter(grid == g)
# transforming to a community matrix - rows = modules, cols = ASVs
data_asv_mat <- data_asv_grid %>%
filter(host_group==asv_group) %>%
filter(asv_degree <= 2) %>%
distinct(asv_ID, host_group) %>%
mutate(abundance = 1) %>%
spread(asv_ID, abundance, fill = 0) %>%
column_to_rownames("host_group") %>%
as.matrix()
###
# transforming to a community matrix - rows = individuals, cols = ASVs
data_asv_mat2 <- data_asv_grid %>%
mutate(abundance = 1) %>%
#filter(asv_degree > 5) %>%
distinct(host_ID, asv_ID, abundance) %>%
spread(asv_ID, abundance, fill = 0) %>%
column_to_rownames("host_ID") %>%
as.matrix()
# calculating betaNTI
betaNTI_results_grid <- fun_calc_betaNTI(data_asv_mat2, asv_distance, asv_pool, FALSE) %>%
mutate(grid = g)
betaNTI_results <- rbind(betaNTI_results, betaNTI_results_grid)
}
betaNTI_results %>%
left_join(data_asv_village %>% distinct(host_ID, host_group), by=c("module1"="host_ID")) %>% rename(host_group1=host_group) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group), by=c("module2"="host_ID")) %>% rename(host_group2=host_group) %>%
#filter(host_group1 %in% n_grids_module$n_grid & host_group2 %in% n_grids_module$n_grid) %>%
filter(host_group1 != host_group2) %>%
group_by(grid) %>%
summarise(mean = mean(betaNTI))
################
# individuals across grids
data_betaNTI <- data_asv_village %>%
distinct(host_ID, asv_ID) %>%
mutate(reads = 1) %>%
spread(asv_ID, reads, fill = 0) %>%
column_to_rownames("host_ID") %>%
as.matrix()
r <- fun_calc_betaNTI(data_betaNTI, asv_distance, asv_pool, FALSE)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
t.test(same_module$mean, mu=0)
View(same_module)
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 )
t.test(same_module$betaNTI, mu=0)
View(asv_pool)
fun_calc_betaNTI <- function(dat_mat, phylo_dist, asv_pool) {
n_modules <- nrow(dat_mat)
n_asv <- ncol(dat_mat)
#asv_pool2 <- colnames(dat_mat)
# calculating observed MNTD
mntd_obs <- as.matrix(picante::comdistnt(dat_mat, phylo_dist))
mntd_shuff <- array(NA,dim = c(n_modules,n_modules,10))
# loop for shuffling
for (i in 1:10) {
# randomly sampling ASVs from the ASV pool
shuff_asv_names <- sample(asv_pool$asv_ID, n_asv, prob = asv_pool$p, replace = FALSE)
# changing the cols names
dat_mat_shuff <- dat_mat
colnames(dat_mat_shuff) <- shuff_asv_names
# calculating MNTD
mntd_shuff[,,i] <- as.matrix(picante::comdistnt(dat_mat_shuff, phylo_dist))
}
# taking the mean and sd of the shuffled matrices
mntd_shuff_mean <- apply(mntd_shuff,c(1,2),mean)
mntd_shuff_sd <- apply(mntd_shuff,c(1,2),sd)
# calculating betaNTI
betaNTI_mat <- (mntd_obs - mntd_shuff_mean) / mntd_shuff_sd
betaNTI_mat2 <- betaNTI_mat
betaNTI_mat2[upper.tri(betaNTI_mat2)] <- NA
diag(betaNTI_mat2) <- NA
betaNTI <- melt(betaNTI_mat2) %>%
filter(!(is.na(value))) %>%
rename(module1 = Var1, module2 = Var2, betaNTI = value)
return(betaNTI)
}
fun_calc_betaNTI <- function(dat_mat, phylo_dist, asv_pool) {
n_modules <- nrow(dat_mat)
n_asv <- ncol(dat_mat)
#asv_pool2 <- colnames(dat_mat)
# calculating observed MNTD
mntd_obs <- as.matrix(picante::comdistnt(dat_mat, phylo_dist))
mntd_shuff <- array(NA,dim = c(n_modules,n_modules,20))
# loop for shuffling
for (i in 1:20) {
# randomly sampling ASVs from the ASV pool
shuff_asv_names <- sample(asv_pool$asv_ID, n_asv, prob = asv_pool$p, replace = FALSE)
# changing the cols names
dat_mat_shuff <- dat_mat
colnames(dat_mat_shuff) <- shuff_asv_names
# calculating MNTD
mntd_shuff[,,i] <- as.matrix(picante::comdistnt(dat_mat_shuff, phylo_dist))
}
# taking the mean and sd of the shuffled matrices
mntd_shuff_mean <- apply(mntd_shuff,c(1,2),mean)
mntd_shuff_sd <- apply(mntd_shuff,c(1,2),sd)
# calculating betaNTI
betaNTI_mat <- (mntd_obs - mntd_shuff_mean) / mntd_shuff_sd
betaNTI_mat2 <- betaNTI_mat
betaNTI_mat2[upper.tri(betaNTI_mat2)] <- NA
diag(betaNTI_mat2) <- NA
betaNTI <- melt(betaNTI_mat2) %>%
filter(!(is.na(value))) %>%
rename(module1 = Var1, module2 = Var2, betaNTI = value)
return(betaNTI)
}
r <- fun_calc_betaNTI(data_betaNTI, asv_distance, asv_pool)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
t.test(same_module$mean, mu=0)
shapiro.test(same_module$mean)
a=t.test(same_module$mean, mu=0)
shapiro.test(residuals(a))
residuals(a)
View(r)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
View(n_grids_module)
# finding the small modules (occuring in only 1-2 grids)
n_grids_module <- data_asv_village %>%
group_by(host_group) %>%
summarise(n_grid = n_distinct(grid))
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>% left_join(n_grids_module, by="host_group")
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>% left_join(n_grids_module, by=c("host_group1"="host_group"))
plot(same_module$mean,same_module$n_grid)
plot(same_module$mean~same_module$n_grid)
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 )
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
plot(same_module$mean~same_module$n_grid)
plot(same_module$betaNTI~same_module$n_grid)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 )
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 ) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
plot(same_module$mean~same_module$n_grid)
t.test(same_module$mean, mu=0)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 & grid1==grid2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
t.test(same_module$mean, mu=0)
plot(same_module$mean~same_module$n_grid)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2 & grid1!=grid2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
plot(same_module$mean~same_module$n_grid)
t.test(same_module$mean, mu=0)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
plot(same_module$mean~same_module$n_grid)
t.test(same_module$mean, mu=0)
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2)
plot(same_module$mean~same_module$n_grid)
t.test(same_module$betaNTI, mu=0)
raupc <- raupcrick(data_betaNTI)
same_module_raup <- as.matrix(raupc)
View(same_module_raup)
raupc2 <- as.matrix(raupc)
raupc2[upper.tri(raupc2)] <- NA
diag(raupc2) <- NA
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value))) %>%
################
# population level
n_grid <- data_asv_village %>% group_by(grid) %>% summarise(n_host = n_distinct(host_ID))
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))
View(same_module_raup)
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2 & grid1==grid2) %>%
group_by(grid1) %>%
summarise(mean = mean(betaNTI))
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid)
raupc <- raupcrick(data_betaNTI)
raupc2 <- as.matrix(raupc)
raupc2[upper.tri(raupc2)] <- NA
diag(raupc2) <- NA
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid)
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>% mutate(sig = ifelse(betaNTI>=2,1,0))
table(same_module$sig)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2) %>% mutate(sig = ifelse(betaNTI>=2,1,0))
table(same_module$sig)
13895/(22433+13895)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2 & grid1==grid2) %>% mutate(sig = ifelse(betaNTI>2,1,0))
table(same_module$sig)
2640/(4511+2640)
unlink("code/modularity_analysis_main_cache", recursive = TRUE)
View(data_asv)
data_asv <- read_csv("../data/data_processed/microbiome/data_asv_rra0.01_th1000.csv") %>%
filter(host_species == "Rattus rattus" & grid!="village")
# filter villages
data_asv_village <- data_asv %>%
filter(village == "Mandena")
# calculating ASVs degree
asv_degree <- data_asv_village %>%
group_by(asv_ID) %>%
summarise(n = n_distinct(host_ID)) %>%
rename(asv_degree = n)
data_asv_village %<>% left_join(asv_degree, by="asv_ID")
View(data_asv_village)
?comdistnt
rm(list=ls())
# reading the phylogenetic tree
best_tree <- readRDS(file = "results/phylo_tree_0.01_2.rds")
phylo_tree <- best_tree$tree
# reading the microbiome data with modules
data_asv <- read_csv("data/data_processed/microbiome/data_asv_rra0.01_th1000_with_modules.csv") %>%
filter(host_species == "Rattus rattus" & grid!="village")
fun_calc_betaNTI <- function(dat_mat, phylo_dist, asv_pool) {
n_modules <- nrow(dat_mat)
n_asv <- ncol(dat_mat)
#asv_pool2 <- colnames(dat_mat)
# calculating observed MNTD
mntd_obs <- as.matrix(picante::comdistnt(dat_mat, phylo_dist))
mntd_shuff <- array(NA,dim = c(n_modules,n_modules,10))
# loop for shuffling
for (i in 1:10) {
# randomly sampling ASVs from the ASV pool
shuff_asv_names <- sample(asv_pool$asv_ID, n_asv, prob = asv_pool$p, replace = FALSE)
# changing the cols names
dat_mat_shuff <- dat_mat
colnames(dat_mat_shuff) <- shuff_asv_names
# calculating MNTD
mntd_shuff[,,i] <- as.matrix(picante::comdistnt(dat_mat_shuff, phylo_dist))
}
# taking the mean and sd of the shuffled matrices
mntd_shuff_mean <- apply(mntd_shuff,c(1,2),mean)
mntd_shuff_sd <- apply(mntd_shuff,c(1,2),sd)
# calculating betaNTI
betaNTI_mat <- (mntd_obs - mntd_shuff_mean) / mntd_shuff_sd
betaNTI_mat2 <- betaNTI_mat
betaNTI_mat2[upper.tri(betaNTI_mat2)] <- NA
diag(betaNTI_mat2) <- NA
betaNTI <- melt(betaNTI_mat2) %>%
filter(!(is.na(value))) %>%
rename(module1 = Var1, module2 = Var2, betaNTI = value)
return(betaNTI)
}
# ASVs phylogenetic distance
asv_distance <- ape::cophenetic.phylo(phylo_tree)
# filter villages
data_asv_village <- data_asv %>%
filter(village == "Mandena")
# ASVs pool
asv_pool <- data_asv_village %>%
distinct(asv_ID, asv_degree) %>%
mutate(p = asv_degree/length(unique(data_asv_village$asv_ID)))
grids_names <- unique(data_asv_village$grid)
betaNTI_results <- NULL
################
# individuals across grids
data_betaNTI <- data_asv_village %>%
distinct(host_ID, asv_ID) %>%
mutate(reads = 1) %>%
spread(asv_ID, reads, fill = 0) %>%
column_to_rownames("host_ID") %>%
as.matrix()
r <- fun_calc_betaNTI(data_betaNTI, asv_distance, asv_pool)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
#filter(host_group1 != host_group2 & grid1==grid2) %>%
mutate(sig = ifelse(betaNTI>2,1,0))
table(same_module$sig)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2) %>%
mutate(sig = ifelse(betaNTI>2,1,0))
View(same_module)
t.test(same_module$betaNTI, mu=0)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
mutate(sig = ifelse(betaNTI>2,1,0))
t.test(same_module$betaNTI, mu=0)
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
mutate(sig = ifelse(betaNTI>2,1,0)) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI)) %>%
left_join(n_grids_module, by=c("host_group1"="host_group"))
# the same module
same_module <- r %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 == host_group2) %>%
mutate(sig = ifelse(betaNTI>2,1,0)) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
t.test(same_module$mean, mu=0)
raupc <- raupcrick(data_betaNTI)
raupc2 <- as.matrix(raupc)
raupc2[upper.tri(raupc2)] <- NA
diag(raupc2) <- NA
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2) %>%
group_by(host_group1) %>%
summarise(mean = mean(betaNTI))
View(same_module_raup)
same_module_raup <- melt(raupc2) %>%
filter(!(is.na(value)))%>%
rename(module1 = Var1, module2 = Var2, betaNTI = value) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module1"="host_ID")) %>% rename(host_group1=host_group, grid1=grid) %>%
left_join(data_asv_village %>% distinct(host_ID, host_group, grid), by=c("module2"="host_ID")) %>% rename(host_group2=host_group, grid2=grid) %>%
filter(host_group1 != host_group2)
mean(same_module_raup$betaNTI)
#####
village_summary <- read_csv("data/data_processed/village_summary.csv")
# correlations between variables
psych::pairs.panels(village_summary2 %>% filter(village=="Mandena") %>%  select(-village,-grid1,-grid2), ellipses = F, lm = T)
# correlations between variables
psych::pairs.panels(village_summary %>% filter(village=="Mandena") %>%  select(-village,-grid1,-grid2), ellipses = F, lm = T)
