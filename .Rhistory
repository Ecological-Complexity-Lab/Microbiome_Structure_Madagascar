# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(betaNTI))  %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>5, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = 1-scales::rescale(mean_betaNTI,to=c(0,1)))
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI)))  %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>5, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = 1-scales::rescale(mean_betaNTI,to=c(0,1)))
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI)))  %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>1, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = 1-scales::rescale(mean_betaNTI,to=c(0,1)))
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI)))  %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>1, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
colo <- heat.colors(7)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
View(modules_pie)
colo <- c("#f9c74f","#f94144", "#4d908e", "#277da1", "#90be6d", "#43aa8b", "#577590")
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
colo <- c("#f9c74f","#f94144", "#4d908e", "#277da1", "#90be6d", "#00916e", "#766153")
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
margin=c(0,0,0,0))
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI)))
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
edge.color=NA)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA,
edge.color=NA)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
edges.color=NA,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI))) %>%
#mutate(rescale_betaNTI = ifelse(mean_betaNTI>1, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI))) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>10, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(betaNTI)) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>1, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(betaNTI)) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>0.5, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI))) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>0.5, 0, mean_betaNTI)) %>%
filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI))) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>0.5, 0, mean_betaNTI)) %>%
#filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1)))*10)
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
modules_graph <- graph_from_data_frame(data_for_graph, directed = FALSE)
V(modules_graph)$pie.color=list(colo)
set.seed(123)
l <- layout_with_fr(modules_graph)
l <- norm_coords(l, ymin=-3, ymax=3, xmin=-3, xmax=3)
plot(modules_graph,
rescale=F,
xlim = c(-3, 3),
ylim = c(-3, 3.2),
layout=l,
vertex.shape="pie",
vertex.pie=module_pie_list,
vertex.size=modules_size$n *10,
edge.curved=.1,
vertex.label=NA)
# building the network
# calculating the edges by betaNTI
# edge between modules = mean betaNTI values between all the individuals in the two modules
betaNTI_final_mandena <- betaNTI_three_villages %>%
mutate(same_module = ifelse(host_group1==host_group2, "Same","Different")) %>%
filter(village == "Mandena" & same_module == "Different") %>%
mutate(host_group1_org = host_group1) %>%
rowwise() %>%
mutate(host_group1 = sort(c(host_group1, host_group2))[1], host_group2 = sort(c(host_group1_org, host_group2))[2]) %>%
group_by(host_group1, host_group2) %>%
summarise(mean_betaNTI = mean(sqrt(betaNTI))) %>%
mutate(rescale_betaNTI = ifelse(mean_betaNTI>0.5, 0, mean_betaNTI)) %>%
#filter(rescale_betaNTI != 0) %>%
mutate(rescale_betaNTI = (1-scales::rescale(mean_betaNTI,to=c(0,1))))
# igraph
data_for_graph <- betaNTI_final_mandena %>% select(-mean_betaNTI)
