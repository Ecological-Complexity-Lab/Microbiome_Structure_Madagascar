theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(mass))
g <- host_final_data %>%
#filter(sex == "male") %>%
ggplot(aes(x=pre, y=mass, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average Host Mass [g]")
print(g)
# final table
host_final_data <- modules_table_three_villages %>%
filter(village == "Mandena") %>%
distinct(host_ID, host_group) %>%
left_join(host_attr, by="host_ID") %>%
left_join(host_median_degree, by="host_ID") %>%
left_join(n_landuse, by=c("village","host_group")) %>%
#mutate(age_repro = factor(age_repro)) %>%
mutate(pre = ifelse(n_grid<2,"low", ifelse(n_grid>5,"high", "medium"))) %>%
mutate(pre = factor(pre, levels = c("low","medium","high"))) %>%
mutate(sex2 = ifelse(sex=="male",1,0)) %>%
mutate(age = ifelse(age_repro==1,"young","adult"))
diff_results <- host_final_data %>%
group_by(pre) %>%
summarise(n = mean(mean_degree))
g <- host_final_data %>%
ggplot(aes(x=pre, y=mean_degree, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Degree")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(richness))
g <- host_final_data %>%
ggplot(aes(x=pre, y=richness, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(mass))
g <- host_final_data %>%
#filter(sex == "male") %>%
ggplot(aes(x=pre, y=mass, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average Host Mass [g]")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(mass))
g <- host_final_data %>%
filter(sex == "male") %>%
ggplot(aes(x=pre, y=mass, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average Host Mass [g]")
print(g)
# final table
host_final_data <- modules_table_three_villages %>%
#filter(village == "Mandena") %>%
distinct(host_ID, host_group) %>%
left_join(host_attr, by="host_ID") %>%
left_join(host_median_degree, by="host_ID") %>%
left_join(n_landuse, by=c("village","host_group")) %>%
#mutate(age_repro = factor(age_repro)) %>%
mutate(pre = ifelse(n_grid<2,"low", ifelse(n_grid>5,"high", "medium"))) %>%
mutate(pre = factor(pre, levels = c("low","medium","high"))) %>%
mutate(sex2 = ifelse(sex=="male",1,0)) %>%
mutate(age = ifelse(age_repro==1,"young","adult"))
diff_results <- host_final_data %>%
group_by(pre) %>%
summarise(n = mean(mean_degree))
g <- host_final_data %>%
ggplot(aes(x=pre, y=mean_degree, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Degree")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(richness))
g <- host_final_data %>%
ggplot(aes(x=pre, y=richness, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
View(data_asv)
# final table
host_final_data <- modules_table_three_villages %>%
filter(village == "Andatsakala") %>%
distinct(host_ID, host_group) %>%
left_join(host_attr, by="host_ID") %>%
left_join(host_median_degree, by="host_ID") %>%
left_join(n_landuse, by=c("village","host_group")) %>%
#mutate(age_repro = factor(age_repro)) %>%
mutate(pre = ifelse(n_grid<2,"low", ifelse(n_grid>5,"high", "medium"))) %>%
mutate(pre = factor(pre, levels = c("low","medium","high"))) %>%
mutate(sex2 = ifelse(sex=="male",1,0)) %>%
mutate(age = ifelse(age_repro==1,"young","adult"))
diff_results <- host_final_data %>%
group_by(pre) %>%
summarise(n = mean(mean_degree))
g <- host_final_data %>%
ggplot(aes(x=pre, y=mean_degree, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Degree")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(richness))
g <- host_final_data %>%
ggplot(aes(x=pre, y=richness, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
# final table
host_final_data <- modules_table_three_villages %>%
filter(village == "Mandena") %>%
distinct(host_ID, host_group) %>%
left_join(host_attr, by="host_ID") %>%
left_join(host_median_degree, by="host_ID") %>%
left_join(n_landuse, by=c("village","host_group")) %>%
#mutate(age_repro = factor(age_repro)) %>%
mutate(pre = ifelse(n_grid<2,"low", ifelse(n_grid>5,"high", "medium"))) %>%
mutate(pre = factor(pre, levels = c("low","medium","high"))) %>%
mutate(sex2 = ifelse(sex=="male",1,0)) %>%
mutate(age = ifelse(age_repro==1,"young","adult"))
diff_results <- host_final_data %>%
group_by(pre) %>%
summarise(n = mean(mean_degree))
g <- host_final_data %>%
ggplot(aes(x=pre, y=mean_degree, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Degree")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(richness))
g <- host_final_data %>%
ggplot(aes(x=pre, y=richness, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
# final table
host_final_data <- modules_table_three_villages %>%
filter(village == "Sarahandrano") %>%
distinct(host_ID, host_group) %>%
left_join(host_attr, by="host_ID") %>%
left_join(host_median_degree, by="host_ID") %>%
left_join(n_landuse, by=c("village","host_group")) %>%
#mutate(age_repro = factor(age_repro)) %>%
mutate(pre = ifelse(n_grid<2,"low", ifelse(n_grid>4,"high", "medium"))) %>%
mutate(pre = factor(pre, levels = c("low","medium","high"))) %>%
mutate(sex2 = ifelse(sex=="male",1,0)) %>%
mutate(age = ifelse(age_repro==1,"young","adult"))
diff_results <- host_final_data %>%
group_by(pre) %>%
summarise(n = mean(mean_degree))
g <- host_final_data %>%
ggplot(aes(x=pre, y=mean_degree, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Degree")
print(g)
diff_results <- host_final_data %>%
#filter(sex == "male") %>%
group_by(pre) %>%
summarise(n = mean(richness))
g <- host_final_data %>%
ggplot(aes(x=pre, y=richness, fill=pre)) +
geom_boxplot() +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20), legend.position = "none") +
labs(x="No. of Land Uses per Module", y="Average ASVs Richness")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(sex)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=sex)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Sex Ratio")
print(g)
diff_results <- host_final_data %>%
group_by(pre) %>%
count(age)
g <- diff_results %>%
ggplot(aes(x=pre, y=n, fill=age)) +
geom_bar(position="fill", stat="identity") +
theme_bw() +
theme(axis.text = element_text(size = 14, color = 'black'), title = element_text(size = 20)) +
labs(x="No. of Land Uses per Module", y="Age Ratio")
print(g)
source("modularity_analysis_functions.R", local = knitr::knit_global())
# reading the microbiome data
# working only with Rattus from the three villages
# removing the 'village' grid from the analysis
data_asv <- read_csv("../data/data_processed/microbiome/data_asv_rra0.01_th1000.csv") %>%
filter(host_species == "Rattus rattus" & grid!="village")
# # ASVs taxonomy
# asv_taxa <- read_delim("../data/data_raw/data_microbiome/ASVs_all_merged_taxonomy.tsv") %>%
#   select(ASV, Family)
# data_asv %<>% left_join(asv_taxa, by=c("asv_ID"="ASV"))
#
# data_asv_family <- data_asv %>%
#   group_by(host_ID, village, host_species, grid, season,total_reads, Family) %>%
#   summarise(reads = sum(reads)) %>%
#   rename(asv_ID = Family) %>%
#   filter(!(is.na(asv_ID)))
# data_asv <- data_asv_family
# first of all, run this chunk of code.
# this code does all the modularity analysis using the functions in "modularity_analysis_functions".
# There is a loop runs for the three villages, and all the analysis is done separately for each village.
# the output of the code is variables holding the final results figures (the output of the functions used)
# setting thresholds for core
core_seq <- seq(1,2, by=2)
village_names <- unique(data_asv$village)
nmi_observed_three_villages <- NULL
nmi_diff_core_three_villages <- NULL
modules_similarity_three_villages <- NULL
asv_degree_distribution_three_villages <- NULL
modules_three_villages <- NULL
modules_size_three_villages <- NULL
modules_grid_three_villages <- NULL
modules_table_three_villages <- NULL
# for loop for three villages
for (v in village_names) {
data_asv_village <- data_asv %>%
filter(village == v)
# calculating ASVs degree
asv_degree <- data_asv_village %>%
group_by(asv_ID) %>%
summarise(n = n_distinct(host_ID)) %>%
rename(asv_degree = n)
data_asv_village %<>% left_join(asv_degree, by="asv_ID")
##### observed network
# finding modules
modules_observed <- fun_modularity_analysis(data_asv_village)
modules_table_three_villages <- rbind(modules_table_three_villages, modules_observed)
# calculating similarity in modules between grids
modules_similarity <- fun_modules_similarity(modules_observed) %>%
mutate(village = v)
# saving results in one table
modules_similarity_three_villages <- rbind(modules_similarity_three_villages, modules_similarity)
# ASVs degree distribution
asv_degree_distribution <- fun_asv_degree_distribution(data_asv_village)
asv_degree_distribution_three_villages <- append(asv_degree_distribution_three_villages, asv_degree_distribution)
# figure of modules
modules <- fun_modules(modules_observed)
modules_three_villages <- append(modules_three_villages, modules)
# modules size
modules_size <- fun_module_size(modules_observed)
modules_size_three_villages <- append(modules_size_three_villages, modules_size)
# Number of land uses per module
modules_grid <- fun_module_grid(modules_observed)
modules_grid_three_villages <- append(modules_grid_three_villages, modules_grid)
# calculating NMI
nmi_observed <- fun_nmi_calc(modules_observed, TRUE)
# saving results in one list
nmi_observed_three_villages <- append(nmi_observed_three_villages, nmi_observed)
##### NMI for different values of core microbiome
# calling the function
nmi_diff_core <- fun_modularity_diff_core(data_asv_village, nmi_observed, core_seq)
# saving results in one list
nmi_diff_core_three_villages <- append(nmi_diff_core_three_villages, nmi_diff_core)
}
nmi_diff_core_three_villages[1]
nmi_diff_core_three_villages[[1]]
nmi_diff_core_three_villages[[2]]
nmi_diff_core_three_villages[2]
nmi_observed_three_villages[[1]]
nmi_observed_three_villages[[2]]
nmi_observed_three_villages[[3]]
nmi_observed_three_villages[[5]]
source("modularity_analysis_functions.R", local = knitr::knit_global())
# reading the microbiome data
# working only with Rattus from the three villages
# removing the 'village' grid from the analysis
data_asv <- read_csv("../data/data_processed/microbiome/data_asv_rra0.01_th1000.csv") %>%
filter(host_species == "Rattus rattus" & grid!="village")
# # ASVs taxonomy
# asv_taxa <- read_delim("../data/data_raw/data_microbiome/ASVs_all_merged_taxonomy.tsv") %>%
#   select(ASV, Family)
# data_asv %<>% left_join(asv_taxa, by=c("asv_ID"="ASV"))
#
# data_asv_family <- data_asv %>%
#   group_by(host_ID, village, host_species, grid, season,total_reads, Family) %>%
#   summarise(reads = sum(reads)) %>%
#   rename(asv_ID = Family) %>%
#   filter(!(is.na(asv_ID)))
# data_asv <- data_asv_family
# first of all, run this chunk of code.
# this code does all the modularity analysis using the functions in "modularity_analysis_functions".
# There is a loop runs for the three villages, and all the analysis is done separately for each village.
# the output of the code is variables holding the final results figures (the output of the functions used)
# setting thresholds for core
core_seq <- seq(1,2, by=2)
village_names <- unique(data_asv$village)
nmi_observed_three_villages <- NULL
nmi_diff_core_three_villages <- NULL
modules_similarity_three_villages <- NULL
asv_degree_distribution_three_villages <- NULL
modules_three_villages <- NULL
modules_size_three_villages <- NULL
modules_grid_three_villages <- NULL
modules_table_three_villages <- NULL
# for loop for three villages
for (v in village_names) {
data_asv_village <- data_asv %>%
filter(village == v)
# calculating ASVs degree
asv_degree <- data_asv_village %>%
group_by(asv_ID) %>%
summarise(n = n_distinct(host_ID)) %>%
rename(asv_degree = n)
data_asv_village %<>% left_join(asv_degree, by="asv_ID")
##### observed network
# finding modules
modules_observed <- fun_modularity_analysis(data_asv_village)
modules_table_three_villages <- rbind(modules_table_three_villages, modules_observed)
# calculating similarity in modules between grids
modules_similarity <- fun_modules_similarity(modules_observed) %>%
mutate(village = v)
# saving results in one table
modules_similarity_three_villages <- rbind(modules_similarity_three_villages, modules_similarity)
# ASVs degree distribution
asv_degree_distribution <- fun_asv_degree_distribution(data_asv_village)
asv_degree_distribution_three_villages <- append(asv_degree_distribution_three_villages, asv_degree_distribution)
# figure of modules
modules <- fun_modules(modules_observed)
modules_three_villages <- append(modules_three_villages, modules)
# modules size
modules_size <- fun_module_size(modules_observed)
modules_size_three_villages <- append(modules_size_three_villages, modules_size)
# Number of land uses per module
modules_grid <- fun_module_grid(modules_observed)
modules_grid_three_villages <- append(modules_grid_three_villages, modules_grid)
# calculating NMI
nmi_observed <- fun_nmi_calc(modules_observed, TRUE)
# saving results in one list
nmi_observed_three_villages <- append(nmi_observed_three_villages, nmi_observed)
##### NMI for different values of core microbiome
# calling the function
nmi_diff_core <- fun_modularity_diff_core(data_asv_village, nmi_observed, core_seq)
# saving results in one list
nmi_diff_core_three_villages <- append(nmi_diff_core_three_villages, nmi_diff_core)
}
nmi_observed_three_villages[[2]]
nmi_observed_three_villages[[4]]
nmi_observed_three_villages[[6]]
